name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions
  
on: 
  push:
    branches-ignore: main
jobs:
  prod-check:
    runs-on: ubuntu-latest
    env:
      myInt: 1
    steps:
      - run: echo "Env variable == $myInt"

# questo va SOLO se la parte prima √® andata a buon fine
  non-prod-check:
    runs-on: ubuntu-latest
    needs: prod-check
    steps:
        - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
        - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
        - name: Check out repository code
          uses: actions/checkout@v4
        - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
        - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
        - name: List files in the repository
          run: |
            ls ${{ github.workspace }}
        - run: echo "üçè This job's status is ${{ job.status }}."

# questo va ANCHE se le precedenti NON sono andate a buon fine
  secret:
    runs-on: ubuntu-latest
    steps:
      - name: 'check password'
        run: echo ""My secret is ${{ secrets.PWD }}""


# uses indica che utilizza un'action che esiste gi√† in una qualche repo
# in questo caso usiamo la action login di docker
# andiamo nel marketplace e scriviamo l'azione che ci serve e copiamo cio√® che ci serve da l√¨
# per vedere il marketplace completo vai su: https://github.com/marketplace?type=actions
  docker_login_action:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout repository
        uses: docker/login-action@v3.5.0
        with:
          username: ' '
          password: ' '

